# Generated by Django 5.2.1 on 2025-09-06 19:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=120)),
                (
                    "asset_tag",
                    models.CharField(
                        help_text="Unique asset identifier", max_length=64, unique=True
                    ),
                ),
                (
                    "zone",
                    models.PositiveSmallIntegerField(
                        db_index=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(22),
                        ],
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, help_text="Line/Cell/Bay", max_length=120
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("in_service", "In Service"),
                            ("down", "Down"),
                            ("retired", "Retired"),
                        ],
                        db_index=True,
                        default="active",
                        max_length=16,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["zone", "name"],
                "indexes": [
                    models.Index(
                        fields=["zone", "status"], name="maintenance_zone_a04702_idx"
                    ),
                    models.Index(fields=["name"], name="maintenance_name_3ebadf_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="MaintenanceLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "zone",
                    models.PositiveSmallIntegerField(
                        db_index=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(22),
                        ],
                    ),
                ),
                ("alarm_code", models.CharField(db_index=True, max_length=50)),
                ("alarm_name", models.CharField(blank=True, max_length=150)),
                (
                    "lam_checked",
                    models.BooleanField(
                        default=False,
                        help_text="Line access / lockout or LAM check completed",
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("Easy", "Easy"),
                            ("Medium", "Medium"),
                            ("Hard", "Hard"),
                        ],
                        db_index=True,
                        max_length=10,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Problem statement and high-level approach"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="maintenance_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="logs",
                        to="maintenance.equipment",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Step",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        default=1, help_text="Sequence in which the step was performed"
                    ),
                ),
                ("action", models.TextField(help_text="What was done in this step")),
                (
                    "result",
                    models.TextField(
                        blank=True, help_text="Observation/result after the action"
                    ),
                ),
                (
                    "duration_minutes",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="maintenance.maintenancelog",
                    ),
                ),
                (
                    "performed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="maintenance_steps",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["log", "order"],
            },
        ),
        migrations.AddIndex(
            model_name="maintenancelog",
            index=models.Index(
                fields=["zone", "difficulty"], name="maintenance_zone_abe492_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="maintenancelog",
            index=models.Index(
                fields=["alarm_code"], name="maintenance_alarm_c_34b980_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="maintenancelog",
            index=models.Index(
                fields=["created_at"], name="maintenance_created_c1f396_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="step",
            index=models.Index(
                fields=["log", "order"], name="maintenance_log_id_42b863_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="step",
            unique_together={("log", "order")},
        ),
    ]
